Github https://bit.ly/3A3Stp2
class Order {
	private Boolean isPrepaid;
	private Date dateReceived;
	private List<OrderLine> lineItems;
	//...
}
class Person {
	List<Car> cars; ///....
}
class Car {
	Person owner; //...
}
class Customer {
	String name, address; 
	public String getCreditRating() { ... }
}
class PersonalCustomer extends Customer {
	String CreditCardNumber;
	public override String getCreditRating() 
		{ return "poor"; }
}
class CorporteCustomer extends Customer {
	String contactName, creditRating;
	double creditLimit;
	Employee salesRep;
	public String billForMonth(int month)
		 {...}
	public void remind() { ... }
}
class Employee { ... }
class Order {
	Date dateReceived;
	Boolean isPrepaid;
	String number;
	Money price;
	Customer c;
	List<OrderLine> lineItems;
	void dispatch() { ... }
	void close() { ... }
}
class OrderLine {
	int quantity;
	Money price;
	Product p; //...
}

Q022 - Question
S022 - Solution
Q01 - S01
 Q57, Q58
DRY - 	Q021: BookRentals; Q11: BookRental; 
	Q33 – SurveyData; Q37 – FOC, TT
	Q10 – Jbutton.
	Q34 – replace; Q35 – BookRental
	Q70 – Array Scan.
Small Q56, Q59
SRP Q50, Q51, Q55
Pure function: Q60, Q61
CSV pipe Q62

Self documenting code: 
Q20 – inch; Q06 – NO_GROUPING; 
Q07 – addHoliday; Q21 – full name in English;
Q22 – complexPassword; Q23 – TokenStream; 
Q25 - orderItems

Polymorphism:
if (tc == 1)
	...
else if (tc == 2)
	...
else if (tc == 3
	...
else
	throw new Exception();
Q30 – Shape; Q40Smell: Courses weekly, range, list; 
Q43smell: home address / work address
Q36 – USD, RMB; 

Bounded Buffer Problem:
Assume a set of 3 threads produce ten million integers. A set of 2 threads consume these integers. Output should be how many evens and how many odds.

Beverage b = new Sugar(new Milk(new coffee()));

new Header1(new Footer1(new Footer3(new Header2(new Report1()))))
================================================================
Monte Carlo simulation:
	simulate 1 million 2 dice throws
	how many times did I get 2      1000 / 1M
4 threads - simulate 250,000

Null rules
	- Instead of null, return empty list, empty array, 0.
	- Use Null pattern
	- Optional
	- Document

QCardChips

Bad API: Q53, Q73
	
	obj.f1().f2().f3().f4();
	obj.f4();


OCP:
	Q45 – LoanHandler 
	Q44 – FILE1, DATABASE1
	Q39 - Scheduler
	Q83 – Cooker
	Q84 – ChooseFontDialog






























